// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"fmt"
	"time"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/Application
type Application struct {
	// Application name.
	Name string `json:"name"`
	// Application namespace.
	Namespace string `json:"namespace"`
}

// GetName returns the value of Name.
func (s *Application) GetName() string {
	return s.Name
}

// GetNamespace returns the value of Namespace.
func (s *Application) GetNamespace() string {
	return s.Namespace
}

// SetName sets the value of Name.
func (s *Application) SetName(val string) {
	s.Name = val
}

// SetNamespace sets the value of Namespace.
func (s *Application) SetNamespace(val string) {
	s.Namespace = val
}

type ApplicationList []Application

// Ref: #/components/schemas/ApplicationSummary
type ApplicationSummary struct {
	// Application name.
	Name string `json:"name"`
	// Application namespace.
	Namespace string `json:"namespace"`
	Pods      []Pod  `json:"pods"`
}

// GetName returns the value of Name.
func (s *ApplicationSummary) GetName() string {
	return s.Name
}

// GetNamespace returns the value of Namespace.
func (s *ApplicationSummary) GetNamespace() string {
	return s.Namespace
}

// GetPods returns the value of Pods.
func (s *ApplicationSummary) GetPods() []Pod {
	return s.Pods
}

// SetName sets the value of Name.
func (s *ApplicationSummary) SetName(val string) {
	s.Name = val
}

// SetNamespace sets the value of Namespace.
func (s *ApplicationSummary) SetNamespace(val string) {
	s.Namespace = val
}

// SetPods sets the value of Pods.
func (s *ApplicationSummary) SetPods(val []Pod) {
	s.Pods = val
}

// Error occurred while processing request.
// Ref: #/components/schemas/Error
type Error struct {
	// Human-readable error message.
	ErrorMessage string     `json:"error_message"`
	TraceID      OptTraceID `json:"trace_id"`
	SpanID       OptSpanID  `json:"span_id"`
}

// GetErrorMessage returns the value of ErrorMessage.
func (s *Error) GetErrorMessage() string {
	return s.ErrorMessage
}

// GetTraceID returns the value of TraceID.
func (s *Error) GetTraceID() OptTraceID {
	return s.TraceID
}

// GetSpanID returns the value of SpanID.
func (s *Error) GetSpanID() OptSpanID {
	return s.SpanID
}

// SetErrorMessage sets the value of ErrorMessage.
func (s *Error) SetErrorMessage(val string) {
	s.ErrorMessage = val
}

// SetTraceID sets the value of TraceID.
func (s *Error) SetTraceID(val OptTraceID) {
	s.TraceID = val
}

// SetSpanID sets the value of SpanID.
func (s *Error) SetSpanID(val OptSpanID) {
	s.SpanID = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

// Ref: #/components/schemas/Health
type Health struct {
	// Health status.
	Status string `json:"status"`
	// Service version.
	Version string `json:"version"`
	// Service commit.
	Commit string `json:"commit"`
	// Service build date.
	BuildDate time.Time `json:"build_date"`
}

// GetStatus returns the value of Status.
func (s *Health) GetStatus() string {
	return s.Status
}

// GetVersion returns the value of Version.
func (s *Health) GetVersion() string {
	return s.Version
}

// GetCommit returns the value of Commit.
func (s *Health) GetCommit() string {
	return s.Commit
}

// GetBuildDate returns the value of BuildDate.
func (s *Health) GetBuildDate() time.Time {
	return s.BuildDate
}

// SetStatus sets the value of Status.
func (s *Health) SetStatus(val string) {
	s.Status = val
}

// SetVersion sets the value of Version.
func (s *Health) SetVersion(val string) {
	s.Version = val
}

// SetCommit sets the value of Commit.
func (s *Health) SetCommit(val string) {
	s.Commit = val
}

// SetBuildDate sets the value of BuildDate.
func (s *Health) SetBuildDate(val time.Time) {
	s.BuildDate = val
}

// NewOptSpanID returns new OptSpanID with value set to v.
func NewOptSpanID(v SpanID) OptSpanID {
	return OptSpanID{
		Value: v,
		Set:   true,
	}
}

// OptSpanID is optional SpanID.
type OptSpanID struct {
	Value SpanID
	Set   bool
}

// IsSet returns true if OptSpanID was set.
func (o OptSpanID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSpanID) Reset() {
	var v SpanID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSpanID) SetTo(v SpanID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSpanID) Get() (v SpanID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSpanID) Or(d SpanID) SpanID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTraceID returns new OptTraceID with value set to v.
func NewOptTraceID(v TraceID) OptTraceID {
	return OptTraceID{
		Value: v,
		Set:   true,
	}
}

// OptTraceID is optional TraceID.
type OptTraceID struct {
	Value TraceID
	Set   bool
}

// IsSet returns true if OptTraceID was set.
func (o OptTraceID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTraceID) Reset() {
	var v TraceID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTraceID) SetTo(v TraceID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTraceID) Get() (v TraceID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTraceID) Or(d TraceID) TraceID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Pod
type Pod struct {
	// Pod name.
	Name string `json:"name"`
	// Pod namespace.
	Namespace string `json:"namespace"`
	// Pod status.
	Status    string       `json:"status"`
	Resources PodResources `json:"resources"`
}

// GetName returns the value of Name.
func (s *Pod) GetName() string {
	return s.Name
}

// GetNamespace returns the value of Namespace.
func (s *Pod) GetNamespace() string {
	return s.Namespace
}

// GetStatus returns the value of Status.
func (s *Pod) GetStatus() string {
	return s.Status
}

// GetResources returns the value of Resources.
func (s *Pod) GetResources() PodResources {
	return s.Resources
}

// SetName sets the value of Name.
func (s *Pod) SetName(val string) {
	s.Name = val
}

// SetNamespace sets the value of Namespace.
func (s *Pod) SetNamespace(val string) {
	s.Namespace = val
}

// SetStatus sets the value of Status.
func (s *Pod) SetStatus(val string) {
	s.Status = val
}

// SetResources sets the value of Resources.
func (s *Pod) SetResources(val PodResources) {
	s.Resources = val
}

// Ref: #/components/schemas/PodResources
type PodResources struct {
	// Total CPU usage in millicores.
	CPUUsageTotalMillicores float64 `json:"cpu_usage_total_millicores"`
	// Total memory usage in bytes.
	MemUsageTotalBytes int64 `json:"mem_usage_total_bytes"`
	// Network receive bytes per second.
	NetRxBytesPerSecond int64 `json:"net_rx_bytes_per_second"`
	// Network transmit bytes per second.
	NetTxBytesPerSecond int64 `json:"net_tx_bytes_per_second"`
}

// GetCPUUsageTotalMillicores returns the value of CPUUsageTotalMillicores.
func (s *PodResources) GetCPUUsageTotalMillicores() float64 {
	return s.CPUUsageTotalMillicores
}

// GetMemUsageTotalBytes returns the value of MemUsageTotalBytes.
func (s *PodResources) GetMemUsageTotalBytes() int64 {
	return s.MemUsageTotalBytes
}

// GetNetRxBytesPerSecond returns the value of NetRxBytesPerSecond.
func (s *PodResources) GetNetRxBytesPerSecond() int64 {
	return s.NetRxBytesPerSecond
}

// GetNetTxBytesPerSecond returns the value of NetTxBytesPerSecond.
func (s *PodResources) GetNetTxBytesPerSecond() int64 {
	return s.NetTxBytesPerSecond
}

// SetCPUUsageTotalMillicores sets the value of CPUUsageTotalMillicores.
func (s *PodResources) SetCPUUsageTotalMillicores(val float64) {
	s.CPUUsageTotalMillicores = val
}

// SetMemUsageTotalBytes sets the value of MemUsageTotalBytes.
func (s *PodResources) SetMemUsageTotalBytes(val int64) {
	s.MemUsageTotalBytes = val
}

// SetNetRxBytesPerSecond sets the value of NetRxBytesPerSecond.
func (s *PodResources) SetNetRxBytesPerSecond(val int64) {
	s.NetRxBytesPerSecond = val
}

// SetNetTxBytesPerSecond sets the value of NetTxBytesPerSecond.
func (s *PodResources) SetNetTxBytesPerSecond(val int64) {
	s.NetTxBytesPerSecond = val
}

type SpanID string

type TraceID string
